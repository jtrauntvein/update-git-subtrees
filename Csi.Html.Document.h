/* Csi.Html.Document.h

   Copyright (C) 2000, 2007 Campbell Scientific, Inc.

   Written by: Jon Trauntvein
   Date Begun: Wednesday 3 May 2000
   Last Change: Thursday 11 January 2007
   Last Commit: $Date: 2012-11-20 12:24:32 -0600 (Tue, 20 Nov 2012) $ 
   Committed by: $Author: jon $
   
*/

#ifndef Csi_Html_Document_h
#define Csi_Html_Document_h

#include "Csi.Html.Text.h"
#include "Csi.PolySharedPtr.h"


namespace Csi
{
   namespace Html
   {
      ////////////////////////////////////////////////////////////
      // class Document
      //
      // Represents an HTML document
      ////////////////////////////////////////////////////////////
      class Document: public Tag
      {
      protected:
         ////////////////////////////////////////////////////////////
         // title_tag
         ////////////////////////////////////////////////////////////
         Csi::PolySharedPtr<Tag, Text>  title_tag;

         ////////////////////////////////////////////////////////////
         // head_tag
         ////////////////////////////////////////////////////////////
         tag_handle head_tag;

         ////////////////////////////////////////////////////////////
         // body_tag
         ////////////////////////////////////////////////////////////
         tag_handle body_tag;

         ////////////////////////////////////////////////////////////
         // encoding_tag
         ////////////////////////////////////////////////////////////
         tag_handle encoding_tag;
      
      public:
         ////////////////////////////////////////////////////////////
         // constructor
         ////////////////////////////////////////////////////////////
         Document(char const *title = "");

         ////////////////////////////////////////////////////////////
         // destructor
         ////////////////////////////////////////////////////////////
         virtual ~Document();

         ////////////////////////////////////////////////////////////
         // set_title
         ////////////////////////////////////////////////////////////
         virtual void set_title(char const *title);

         ////////////////////////////////////////////////////////////
         // add_tag
         //
         // Redirects all tags to the body tag
         ////////////////////////////////////////////////////////////
         virtual tag_handle add_tag(tag_handle tag);

         ////////////////////////////////////////////////////////////
         // add_tag
         ////////////////////////////////////////////////////////////
         virtual tag_handle add_tag(
            StrAsc const &tag_name,
            bool on_same_line = false)
         {
            tag_handle rtn(new Tag(tag_name,on_same_line));
            add_tag(rtn);
            return rtn;
         }
         
         ////////////////////////////////////////////////////////////
         // render_whole
         ////////////////////////////////////////////////////////////
         void render_whole(std::ostream &out)
         {
            before_render(out);
            render(out);
            after_render(out);
         }
         void render_whole(std::wostream &out)
         {
            before_render(out);
            render(out);
            after_render(out);
         }

         ////////////////////////////////////////////////////////////
         // get_head
         ////////////////////////////////////////////////////////////
         SharedPtr<Tag> &get_head()
         { return head_tag; }

         ////////////////////////////////////////////////////////////
         // get_body
         ////////////////////////////////////////////////////////////
         SharedPtr<Tag> &get_body()
         { return body_tag; }

         ////////////////////////////////////////////////////////////
         // set_encoding
         ////////////////////////////////////////////////////////////
         void set_encoding(StrAsc const &encoding_name);
      };
   };
};


#endif
